(* 
This is an example of using the enum mechanism for storing image paths of elements within a website or application. The deeply-nested hierarchy of the image folder allows you to reference a static "key" for an element, and the forKey function provides the ability to extract the associated string value. After that, you can simply concatenate any additional state of the element as necessary:

        put imagePath.forKey("sys_close_window_btn") into closeWindowButton
        moveTo closeWindowButton
        assert that imageFound(image: closeWindowButton & "hover/", waitFor: 10)

As with all enum scripts, you have the ability to extend this base functionality by defining additional function which consume N parameter(s) for the purpose of modifying the value of a resulting hard-coded enum key:

       put imagePath.taskbarIconFor("calculator") into taskbarIcon
       click taskbarIcon
       put taskbarIcon & "active/" into activeTaskbarIcon
       assert that imageFound(image: activeTaskbarIcon, waitFor: 30)

       put imagePath.forNumber(7) into numSeven
       moveTo numSeven
       assert that imageFound(image: numSeven & "hover/", waitFor 10)

These 'factory' handlers help with (a) providing a discrete method for retrieving specific values which often or always require further concatenation or data manipulation while (b) preserving the overall readability of the code.
*)

put "browser/" into browserPath
put browserPath & "buttons/" into browserBtnPath

put "calculator/" into calcPath
put calcPath & "buttons/" into calcBtnPath
put calcPath & "tabs/" into calcTabPath

put "system/" into sysPath
put sysPath & "btns/" into sysBtnPath

put "website/" into wwwPath
put wwwPath & "btns/" into wwwBtnPath

set imagePaths to {

	### BROWSER
	browser_extensions_btn: browserBtnPath & "extensions",
	browser_favorites_btn: browserBtnPath & "favorites",
	browser_pgback_btn: browserBtnPath & "pg_back",
	browser_pgfwd_btn: browserBtnPath & "pg_fwd",
	browser_refresh_btn: browserBtnPath & "refresh",
	browser_stop_btn: browserBtnPath & "stop",
	
	### CALCULATOR
	calc_clear_btn: calcBtnPath & "clear",
	calc_decimal_btn: calcBtnPath & "decimal",
	calc_history_tab: calcTabPath & "history",
	calc_memclear_btn: calcBtnPath & "memory_clear",
	calc_memstore_btn: calcBtnPath & "memory_store",
	calc_menu_btn: calcBtnPath & "menu",
	calc_numpad: calcPath & "numpad",
	calc_operators: calcPath & "operators",
	
	### OPERATING SYSTEM
	sys_close_window_btn: sysBtnPath & "window_close",
	sys_max_window_btn: sysBtnPath & "window_maximize",
	sys_min_window_btn: sysBtnPath & "window_minimize",
	sys_restore_window_btn: sysBtnPath & "window_restore",
	sys_start_btn: sysBtnPath & "start",
	sys_taskbar_icon: sysPath & "taskbar_icons",
	
	### WEBSITE SUT
	website_forgot_pwd_btn: wwwBtnPath & "forgot_pwd",
	website_login_btn: wwwBtnPath & "login",
	website_logo: wwwPath & "logo",
	website_logout_btn: wwwBtnPath & "logout",
}

return imagePaths


-- -- -- -- -- -- -- -- -- -- // -- -- -- -- -- -- -- -- -- -- 


// Returns the value associated with the specified top-level key
-- Example: log imagePath.forKey("calc_decimal_btn")
function forKey imgKey
	put the strictProperties into origSP
	set the strictProperties to true
	
	put the duplicatePropertyKeyMode into origDPKM
	set the duplicatePropertyKeyMode to error
	
	put imagePath().(imgKey) into imagePath
	set the strictProperties to origSP
	set the duplicatePropertykeyMode to origDPKM
	
	if the last character of imagePath is "/" then return imagePath
	else return imagePath & "/"
end forKey


// Returns the image path for the specified number
-- Example: log imagePath.forNumber(7)
function forNumber num
	assert that (0..9 as a list) contains num
	return imagePath.forKey("calc_numpad") & num & "/"
end forNumber


// Returns the image path for the specified operator
-- Example: log imagePath.forOperator("add")
function forOperator op
	assert that ["divide", "multiply", "subtract", "add", "equals"] contains op
	return imagePath.forKey("calc_operators") & op & "/"
end forOperator


// Returns the image path for the specified application's taskbar icon
-- Example: log imagePath.taskbarIconFor("calculator")
function taskbarIconFor appName
	assert that ["calculator"] contains appName
	return imagePath.forKey("sys_taskbar_icon") & appName & "/"
end taskbarIconFor